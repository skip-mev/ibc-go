package types

import (
	errorsmod "cosmossdk.io/errors"
)

// IBC client sentinel errors
var (
	ErrClientExists                           = errorsmod.Register(SubModuleName, 12, "light client already exists")
	ErrInvalidClient                          = errorsmod.Register(SubModuleName, 13, "light client is invalid")
	ErrClientNotFound                         = errorsmod.Register(SubModuleName, 14, "light client not found")
	ErrClientFrozen                           = errorsmod.Register(SubModuleName, 15, "light client is frozen due to misbehaviour")
	ErrInvalidClientMetadata                  = errorsmod.Register(SubModuleName, 16, "invalid client metadata")
	ErrConsensusStateNotFound                 = errorsmod.Register(SubModuleName, 17, "consensus state not found")
	ErrInvalidConsensus                       = errorsmod.Register(SubModuleName, 18, "invalid consensus state")
	ErrClientTypeNotFound                     = errorsmod.Register(SubModuleName, 19, "client type not found")
	ErrInvalidClientType                      = errorsmod.Register(SubModuleName, 110, "invalid client type")
	ErrRootNotFound                           = errorsmod.Register(SubModuleName, 111, "commitment root not found")
	ErrInvalidHeader                          = errorsmod.Register(SubModuleName, 112, "invalid client header")
	ErrInvalidMisbehaviour                    = errorsmod.Register(SubModuleName, 113, "invalid light client misbehaviour")
	ErrFailedClientStateVerification          = errorsmod.Register(SubModuleName, 114, "client state verification failed")
	ErrFailedClientConsensusStateVerification = errorsmod.Register(SubModuleName, 115, "client consensus state verification failed")
	ErrFailedConnectionStateVerification      = errorsmod.Register(SubModuleName, 116, "connection state verification failed")
	ErrFailedChannelStateVerification         = errorsmod.Register(SubModuleName, 117, "channel state verification failed")
	ErrFailedPacketCommitmentVerification     = errorsmod.Register(SubModuleName, 118, "packet commitment verification failed")
	ErrFailedPacketAckVerification            = errorsmod.Register(SubModuleName, 119, "packet acknowledgement verification failed")
	ErrFailedPacketReceiptVerification        = errorsmod.Register(SubModuleName, 120, "packet receipt verification failed")
	ErrFailedNextSeqRecvVerification          = errorsmod.Register(SubModuleName, 121, "next sequence receive verification failed")
	ErrSelfConsensusStateNotFound             = errorsmod.Register(SubModuleName, 122, "self consensus state not found")
	ErrUpdateClientFailed                     = errorsmod.Register(SubModuleName, 123, "unable to update light client")
	ErrInvalidRecoveryClient                  = errorsmod.Register(SubModuleName, 124, "invalid recovery client")
	ErrInvalidUpgradeClient                   = errorsmod.Register(SubModuleName, 125, "invalid client upgrade")
	ErrInvalidHeight                          = errorsmod.Register(SubModuleName, 126, "invalid height")
	ErrInvalidSubstitute                      = errorsmod.Register(SubModuleName, 127, "invalid client state substitute")
	ErrInvalidUpgradeProposal                 = errorsmod.Register(SubModuleName, 128, "invalid upgrade proposal")
	ErrClientNotActive                        = errorsmod.Register(SubModuleName, 129, "client state is not active")
	ErrFailedMembershipVerification           = errorsmod.Register(SubModuleName, 130, "membership verification failed")
	ErrFailedNonMembershipVerification        = errorsmod.Register(SubModuleName, 131, "non-membership verification failed")
	ErrRouteNotFound                          = errorsmod.Register(SubModuleName, 132, "light client module route not found")
	ErrClientTypeNotSupported                 = errorsmod.Register(SubModuleName, 133, "client type not supported")
)
